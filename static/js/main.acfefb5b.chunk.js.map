{"version":3,"sources":["constants/actionTypes.js","actions/authActions.js","components/movieheader.js","actions/movieActions.js","components/movielist.js","components/movie.js","components/login.js","components/register.js","components/authentication.js","reducers/authReducer.js","reducers/movieReducer.js","stores/store.js","App.js","registerServiceWorker.js","index.js"],"names":["actionTypes","USER_LOGGEDIN","USER_LOGOUT","FETCH_MOVIES","FETCH_MOVIE","SET_MOVIE","submitLogin","data","env","runtimeEnv","dispatch","fetch","concat","REACT_APP_API_URL","method","headers","Accept","Content-Type","body","JSON","stringify","mode","then","response","ok","Error","statusText","json","res","username","localStorage","setItem","token","type","catch","e","console","log","logoutUser","removeItem","MovieHeader","this","props","react_default","a","createElement","Navbar","Header","Brand","Nav","lib","to","NavItem","eventKey","disabled","loggedIn","selectedMovie","_id","onClick","logout","bind","className","title","Component","withRouter","connect","state","auth","movie","setMovie","movieSet","fetchMovies","Authorization","getItem","movies","fetchMovie","MovieList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","handleSelect","assertThisInitialized","selectedIndex","_this2","_ref","movieList","Carousel","onSelect","map","Item","key","Image","src","imageUrl","thumbnail","Caption","Glyphicon","glyph","average_rating","year","Movie","ActorInfo","actors","actor","i","character","ReviewInfo","_ref2","reviews","review","reviewer","rating","_ref3","currentMovie","Panel","Heading","Body","ListGroup","ListGroupItem","cast","ownProps","match","params","Login","updateDetails","login","details","password","event","assign","target","id","value","setState","Form","horizontal","FormGroup","controlId","Col","componentClass","ControlLabel","sm","FormControl","onChange","placeholder","smOffset","Button","Register","register","name","submitRegister","Authentication","toggleReg","userNotLoggedIn","showLogin","showReg","components_register","components_login","userLoggedIn","initialState","middlewares","thunk","store","createStore","combineReducers","arguments","length","undefined","action","updated","constants","applyMiddleware","apply","App","es","react_router_dom","movieheader","react_router","exact","path","render","movielist","components_movie","authentication","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.acfefb5b.chunk.js","sourcesContent":["export default {\r\n    USER_LOGGEDIN: 'USER_LOGGEDIN',\r\n    USER_LOGOUT: 'USER_LOGOUT',\r\n    FETCH_MOVIES: 'FETCH_MOVIES',\r\n    FETCH_MOVIE: 'FETCH_MOVIE',\r\n    SET_MOVIE: 'SET_MOVIE'\r\n}","import actionTypes from '../constants/actionTypes';\r\nimport runtimeEnv from '@mars/heroku-js-runtime-env';\r\n\r\nfunction userLoggedIn(username){\r\n    return {\r\n        type: actionTypes.USER_LOGGEDIN,\r\n        username: username\r\n    }\r\n}\r\n\r\nfunction logout(){\r\n    return {\r\n        type: actionTypes.USER_LOGOUT\r\n    }\r\n}\r\n\r\nexport function submitLogin(data){\r\n    const env = runtimeEnv();\r\n    return dispatch => {\r\n        return fetch(`${env.REACT_APP_API_URL}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n            mode: 'cors'})\r\n            .then( (response) => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then( (res) => {\r\n                localStorage.setItem('username', data.username);\r\n                localStorage.setItem('token', res.token);\r\n\r\n                dispatch(userLoggedIn(data.username));\r\n            })\r\n            .catch( (e) => console.log(e) );\r\n    }\r\n}\r\n\r\nexport function submitRegister(data){\r\n    const env = runtimeEnv();\r\n    return dispatch => {\r\n        return fetch(`${env.REACT_APP_API_URL}/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n            mode: 'cors'})\r\n            .then( (response) => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then( (res) => {\r\n\r\n                dispatch(submitLogin(data));\r\n            })\r\n            .catch( (e) => console.log(e) );\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    return dispatch => {\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('token');\r\n        dispatch(logout());\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Navbar, NavItem, Nav} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {logoutUser} from \"../actions/authActions\";\r\n\r\nclass MovieHeader extends Component {\r\n\r\n    logout(){\r\n        this.props.dispatch(logoutUser());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar>\r\n                    <Navbar.Header>\r\n                        <Navbar.Brand>\r\n                            My Movie DataBase MMDB\r\n                        </Navbar.Brand>\r\n                    </Navbar.Header>\r\n                    <Nav>\r\n                        <LinkContainer to=\"/movielist\">\r\n                            <NavItem eventKey={1} disabled={!this.props.loggedIn}>Movie List </NavItem>\r\n                        </LinkContainer>\r\n                        <LinkContainer to={'/movie/'+ (this.props.selectedMovie ? this.props.selectedMovie._id : '')}>\r\n                            <NavItem eventKey={2} disabled={!this.props.loggedIn}>Movie Detail</NavItem>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/signin\">\r\n                            <NavItem eventKey={3}>{this.props.loggedIn ? <button onClick={this.logout.bind(this)}>Logout</button> : 'Login'}</NavItem>\r\n                        </LinkContainer>\r\n                    </Nav>\r\n                </Navbar>\r\n                <header className=\"App-header\">\r\n                    <h1 className=\"App-title\">{(this.props.selectedMovie ? this.props.selectedMovie.title : '')}</h1>\r\n                </header>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        username: state.auth.username,\r\n        selectedMovie: state.movie.selectedMovie,\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(MovieHeader));","import actionTypes from '../constants/actionTypes';\r\nimport runtimeEnv from '@mars/heroku-js-runtime-env';\r\n\r\nfunction moviesFetched(movies){\r\n    return {\r\n        type: actionTypes.FETCH_MOVIES,\r\n        movies: movies\r\n    }\r\n}\r\n\r\nfunction movieFetched(movie){\r\n    return {\r\n        type: actionTypes.FETCH_MOVIE,\r\n        selectedMovie: movie\r\n    }\r\n}\r\n\r\nfunction movieSet(movie){\r\n    return {\r\n        type: actionTypes.SET_MOVIE,\r\n        selectedMovie: movie\r\n    }\r\n}\r\n\r\nexport function setMovie(movie) {\r\n    return dispatch => {\r\n        dispatch(movieSet(movie));\r\n    }\r\n}\r\n\r\nexport function fetchMovies(){\r\n    const env = runtimeEnv();\r\n    return dispatch => {\r\n        return fetch(`${env.REACT_APP_API_URL}/movies?reviews=true`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token')\r\n            },\r\n            mode: 'cors'})\r\n            .then( (response) => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then( (res) => {\r\n                dispatch(moviesFetched(res.movies));\r\n            })\r\n            .catch( (e) => console.log(e) );\r\n    }\r\n}\r\n\r\nexport function fetchMovie(_id){\r\n    const env = runtimeEnv();\r\n    return dispatch => {\r\n        return fetch(`${env.REACT_APP_API_URL}/movies/${_id}?reviews=true`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token')\r\n            },\r\n            mode: 'cors'})\r\n            .then( (response) => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then( (res) => {\r\n                dispatch(movieFetched(res));\r\n            })\r\n            .catch( (e) => console.log(e) );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { fetchMovies } from '../actions/movieActions';\r\nimport { setMovie } from '../actions/movieActions';\r\nimport {connect} from \"react-redux\";\r\nimport { Image } from 'react-bootstrap'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport { Glyphicon } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\n\r\n//require a callback function to be sent to MovieList to update the header subtitle\r\n\r\nclass MovieList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {dispatch} = this.props;\r\n        dispatch(fetchMovies());\r\n    }\r\n\r\n    handleSelect(selectedIndex, e) {\r\n        const {dispatch} = this.props;\r\n        dispatch(setMovie(this.props.movies[selectedIndex]));\r\n    }\r\n\r\n    handleClick = (movie) => {\r\n        const {dispatch} = this.props;\r\n        dispatch(setMovie(movie));\r\n    }\r\n\r\n    render() {\r\n\r\n        const MovieListCarousel= ({movieList}) => {\r\n            if (!movieList) { // evaluates to true if currentMovie is null\r\n                return <div>Loading...</div>;\r\n            }\r\n\r\n            return (\r\n                <Carousel onSelect={this.handleSelect}>\r\n                    {movieList.map((movie) =>\r\n                    <Carousel.Item key={movie._id}>\r\n                        <div>\r\n                            <LinkContainer to={'/movie/'+movie._id} onClick={()=>this.handleClick(movie)}>\r\n                                <Image className=\"image\" src={movie.imageUrl} thumbnail />\r\n                            </LinkContainer>\r\n                        </div>\r\n                        <Carousel.Caption>\r\n                            <h3>{movie.title}</h3>\r\n                            <Glyphicon glyph={'star'} /> {movie.average_rating} &nbsp;&nbsp; {movie.year}\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>)}\r\n            </Carousel>);\r\n        }\r\n\r\n        return (\r\n            <MovieListCarousel movieList={this.props.movies} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        movies: state.movie.movies\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MovieList);","import React, { Component }  from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { Glyphicon, Panel, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { Image } from 'react-bootstrap'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {fetchMovie} from \"../actions/movieActions\";\r\n\r\n//support routing by creating a new component\r\n\r\nclass Movie extends Component {\r\n\r\n    componentDidMount() {\r\n        const {dispatch} = this.props;\r\n        if (this.props.selectedMovie == null)\r\n            dispatch(fetchMovie(this.props._id));\r\n    }\r\n\r\n    render() {\r\n        const ActorInfo = ({actors}) => {\r\n            return actors.map((actor, i) =>\r\n                <p key={i}>\r\n                    <b>{actor.actor}</b> {actor.character}\r\n                </p>\r\n            );\r\n        };\r\n\r\n        const ReviewInfo = ({reviews}) => {\r\n            return reviews.map((review, i) =>\r\n                <p key={i}>\r\n                <b>{review.reviewer}</b> {review.review}\r\n                    <Glyphicon glyph={'star'} /> {review.rating}\r\n                </p>\r\n            );\r\n        }\r\n\r\n        const DetailInfo = ({currentMovie}) => {\r\n            if (!currentMovie) { // evaluates to true if currentMovie is null\r\n                return <div>Loading...</div>;\r\n            }\r\n            return (\r\n                <Panel>\r\n                    <Panel.Heading>Movie Detail</Panel.Heading>\r\n                    <Panel.Body><Image className=\"image\" src={currentMovie.imageUrl} thumbnail /></Panel.Body>\r\n                    <ListGroup>\r\n                        <ListGroupItem>{currentMovie.title}</ListGroupItem>\r\n                        <ListGroupItem><ActorInfo actors={currentMovie.cast} /></ListGroupItem>\r\n                        <ListGroupItem><h4><Glyphicon glyph={'star'} /> {currentMovie.average_rating} </h4></ListGroupItem>\r\n                    </ListGroup>\r\n                    <Panel.Body><ReviewInfo reviews={currentMovie.reviews} /></Panel.Body>\r\n                </Panel>\r\n            );\r\n        };\r\n        return (\r\n            <DetailInfo currentMovie={this.props.selectedMovie} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(ownProps);\r\n    return {\r\n        selectedMovie: state.movie.selectedMovie,\r\n        _id: ownProps.match.params._id\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Movie));","import React, { Component } from 'react';\r\nimport { submitLogin } from '../actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Col, Form, FormGroup, FormControl, ControlLabel, Button } from 'react-bootstrap';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateDetails = this.updateDetails.bind(this);\r\n        this.login = this.login.bind(this);\r\n\r\n        this.state = {\r\n            details:{\r\n                username: '',\r\n                password: ''\r\n            }\r\n        };\r\n    }\r\n\r\n    updateDetails(event){\r\n        let updateDetails = Object.assign({}, this.state.details);\r\n\r\n        updateDetails[event.target.id] = event.target.value;\r\n        this.setState({\r\n            details: updateDetails\r\n        });\r\n    }\r\n\r\n    login() {\r\n        const {dispatch} = this.props;\r\n        dispatch(submitLogin(this.state.details));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Form horizontal>\r\n                <FormGroup controlId=\"username\">\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        Email\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <FormControl onChange={this.updateDetails} value={this.state.details.username} type=\"text\" placeholder=\"Username\" />\r\n                    </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup controlId=\"password\">\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        Password\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <FormControl onChange={this.updateDetails} value={this.state.details.password} type=\"password\" placeholder=\"Password\" />\r\n                    </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Col smOffset={2} sm={10}>\r\n                        <Button onClick={this.login}>Sign in</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","import React, { Component} from 'react';\r\nimport { submitRegister } from '../actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Col, Form, FormGroup, FormControl, ControlLabel, Button } from 'react-bootstrap';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.updateDetails = this.updateDetails.bind(this);\r\n        this.register = this.register.bind(this);\r\n        this.state = {\r\n            details:{\r\n                name: '',\r\n                username: '',\r\n                password: ''\r\n            }\r\n        };\r\n    }\r\n\r\n    updateDetails(event){\r\n        let updateDetails = Object.assign({}, this.state.details);\r\n\r\n        updateDetails[event.target.id] = event.target.value;\r\n        this.setState({\r\n            details: updateDetails\r\n        });\r\n    }\r\n\r\n    register(){\r\n        const {dispatch} = this.props;\r\n        dispatch(submitRegister(this.state.details));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Form horizontal>\r\n                <FormGroup controlId=\"name\">\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        Email\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <FormControl onChange={this.updateDetails} value={this.state.details.name} type=\"text\" placeholder=\"Name\" />\r\n                    </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup controlId=\"username\">\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        Email\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <FormControl onChange={this.updateDetails} value={this.state.details.username} type=\"text\" placeholder=\"Username\" />\r\n                    </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup controlId=\"password\">\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        Password\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <FormControl onChange={this.updateDetails} value={this.state.details.password} type=\"password\" placeholder=\"Password\" />\r\n                    </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Col smOffset={2} sm={10}>\r\n                        <Button onClick={this.register}>Register</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);","import React, { Component} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport { logoutUser } from '../actions/authActions';\r\n\r\nclass Authentication extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            toggleReg: false\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    showLogin(){\r\n        this.setState({\r\n            toggleReg: false\r\n        });\r\n    }\r\n\r\n    showReg(){\r\n        this.setState({\r\n            toggleReg: true\r\n        });\r\n    }\r\n\r\n    logout(){\r\n        this.props.dispatch(logoutUser());\r\n    }\r\n\r\n    render(){\r\n\r\n        const userNotLoggedIn = (\r\n            <div>\r\n                <button onClick={this.showLogin.bind(this)}>Login</button><button onClick={this.showReg.bind(this)}>Register</button>\r\n                { this.state.toggleReg ? <Register /> : <Login /> }\r\n            </div>\r\n        );\r\n        const userLoggedIn = (<div>Logged in as: {this.props.username} <button onClick={this.logout.bind(this)}>Logout</button></div>);\r\n\r\n        return (\r\n            <div>\r\n                {this.props.loggedIn ? userLoggedIn : userNotLoggedIn}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        username: state.auth.username\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Authentication)","import constants from '../constants/actionTypes'\r\n\r\nvar initialState = {\r\n    loggedIn: localStorage.getItem('token') ? true : false,\r\n    username: localStorage.getItem('username') ? localStorage.getItem('username') : ''\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    var updated = Object.assign({}, state);\r\n\r\n    switch(action.type) {\r\n        case constants.USER_LOGGEDIN:\r\n            updated['loggedIn'] = true;\r\n            updated['username'] = action.username;\r\n            return updated;\r\n\r\n        case constants.USER_LOGOUT:\r\n            updated['loggedIn'] = false;\r\n            updated['username'] = '';\r\n            return updated;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import constants from '../constants/actionTypes'\r\n\r\nvar initialState = {\r\n    movies: [],\r\n    selectedMovie: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    var updated = Object.assign({}, state);\r\n\r\n    switch(action.type) {\r\n        case constants.FETCH_MOVIES:\r\n            updated['movies'] = action.movies;\r\n            updated['selectedMovie'] = action.movies[0];\r\n            return updated;\r\n        case constants.SET_MOVIE:\r\n            updated['selectedMovie'] = action.selectedMovie;\r\n            return updated;\r\n        case constants.FETCH_MOVIE:\r\n            updated['selectedMovie'] = action.selectedMovie;\r\n            return updated;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from '../reducers/authReducer';\r\nimport movieReducer from \"../reducers/movieReducer\";\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n    const { logger } = require(`redux-logger`);\r\n\r\n    middlewares.push(logger);\r\n}\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        auth: authReducer,\r\n        movie: movieReducer\r\n    }),\r\n    applyMiddleware(\r\n        ...middlewares\r\n    )\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport MovieHeader from './components/movieheader';\r\nimport MovieList from './components/movielist';\r\nimport Movie from './components/movie';\r\nimport Authentication from './components/authentication';\r\nimport {HashRouter,Route} from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './stores/store'\r\n\r\n//add routing configuration\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Provider store={store}>\r\n                <HashRouter>\r\n                    <div>\r\n                        <MovieHeader />\r\n                        <Route exact path=\"/\" render={()=><MovieList />}/>\r\n                        <Route path=\"/movielist\" render={()=><MovieList />}/>\r\n                        <Route path=\"/movie/:movieId\" render={()=><Movie />}/>\r\n                        <Route path=\"/signin\" render={()=><Authentication />}/>\r\n                    </div>\r\n                </HashRouter>\r\n                </Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}